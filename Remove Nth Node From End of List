/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* firstPointer = head;
        ListNode* secondPointer = head;
        ListNode* temp = nullptr;
        while(n > 0 && secondPointer  != nullptr){
            secondPointer = secondPointer -> next;
            n--;
        }
        while(secondPointer != nullptr){
            if(firstPointer -> next -> next == nullptr)
                temp = fisrtPointer;
            secondPointer = secondPointer -> next; 
            firstPointer = firstPointer -> next; 
        }
        if(firstPointer == head)
            head = firstPointer -> next;
        else if(firstPointer -> next != nullptr){
            firstPointer -> val = firstPointer -> next -> val;
            firstPointer -> next = firstPointer -> next -> next;
        }else if(temp){
            temp -> next = nullptr;
        }
           return head;  
    }
};
