/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        
        if((root== nullptr) || (root->left == nullptr) && (root->right == nullptr))
            return root;
        
        TreeNode * tempL = increasingBST(root -> left);
        TreeNode* savePoint = nullptr;
        if(tempL != nullptr){
            savePoint = tempL;
            while(savePoint->right != nullptr){
                savePoint = savePoint->right;
            }
            savePoint->right = root;
            root -> left = nullptr;
            root = tempL;
        }
        
        TreeNode * tempR = increasingBST(root -> right); 
        root->right = tempR;
        
        return root;
    }
};
