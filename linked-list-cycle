/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if (head == nullptr || head -> next == nullptr)
            return false;
        ListNode* firstPointer = head; 
        ListNode* secondPointer = head -> next;
        while(secondPointer != firstPointer){
            firstPointer = firstPointer -> next; 
            if(secondPointer != nullptr)
                secondPointer = secondPointer -> next;
            if(secondPointer == nullptr){
                return false;
            }else{
                secondPointer = secondPointer -> next;
            }
        }
        return true;
    }
};
