/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return IsMirror(root, root);
    }
    bool IsMirror(TreeNode* tree1, TreeNode* tree2){
        if(tree1 == nullptr && tree2 == nullptr)
            return true;
        if(tree1 && tree2 && tree1 -> val == tree2 -> val){
            return(IsMirror(tree1 -> left, tree2 -> right) && IsMirror(tree1 -> right ,tree2 -> left)); 
        }else
            return 0;
    }   
};
